// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WpfEfCoreTest;

namespace WpfEfCoreTest.Migrations
{
    [DbContext(typeof(TestContext))]
    [Migration("20231030173601_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Cyrillic_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WpfEfCoreTest.Model.Dgm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Gold")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gold");

                    b.Property<int>("Idformular")
                        .HasColumnType("int")
                        .HasColumnName("idformular");

                    b.Property<string>("Mpg")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("mpg");

                    b.Property<string>("NumForm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("numForm");

                    b.Property<string>("Silver")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("silver");

                    b.HasKey("Id");

                    b.HasIndex("Idformular");

                    b.ToTable("dgm");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.F111", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("GtDate")
                        .HasColumnType("date");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.Property<int>("IdnameOborud")
                        .HasColumnType("int")
                        .HasColumnName("idnameOborud");

                    b.Property<string>("InvNum")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("KartNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("model");

                    b.Property<string>("NumForm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("numForm");

                    b.Property<DateTime?>("OutDate")
                        .HasColumnType("date");

                    b.Property<string>("Podr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Podr");

                    b.Property<bool>("Remont")
                        .HasColumnType("bit");

                    b.Property<bool>("Spisan")
                        .HasColumnType("bit");

                    b.Property<string>("ZavodNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("zavodNum");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.HasIndex("IdnameOborud");

                    b.ToTable("f111");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.Formular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Count")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("count");

                    b.Property<DateTime>("DataTo")
                        .HasColumnType("date")
                        .HasColumnName("DataTO");

                    b.Property<DateTime>("DateIn")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateOut")
                        .HasColumnType("date");

                    b.Property<string>("GarantyTo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("garantyTo");

                    b.Property<int>("IdKomplect")
                        .HasColumnType("int")
                        .HasColumnName("idKomplect");

                    b.Property<int>("Idf111")
                        .HasColumnType("int")
                        .HasColumnName("idf111");

                    b.Property<string>("InvNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("model");

                    b.Property<string>("NameKomplect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAkt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("numAkt");

                    b.Property<string>("NumForm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("numForm");

                    b.Property<string>("Serial")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("serial");

                    b.Property<string>("YearProd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("yearProd");

                    b.HasKey("Id");

                    b.HasIndex("IdKomplect");

                    b.HasIndex("Idf111");

                    b.ToTable("formular");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.Info", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Doljnost")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("doljnost");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ip");

                    b.Property<string>("Login")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("login");

                    b.Property<string>("Mac")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mac");

                    b.Property<string>("NameComp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("pass");

                    b.Property<string>("Vtel")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("vtel");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("info");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.Komplect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameKompl")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Komplect");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.NameOborud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameOborud1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nameOborud");

                    b.HasKey("Id");

                    b.ToTable("nameOborud");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.OtchetFormular", b =>
                {
                    b.Property<string>("Count")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("count");

                    b.Property<DateTime?>("DataTo")
                        .HasColumnType("date")
                        .HasColumnName("DataTO");

                    b.Property<DateTime>("DateIn")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateOut")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IdKomplect")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("idKomplect");

                    b.Property<int>("Idf111")
                        .HasColumnType("int")
                        .HasColumnName("idf111");

                    b.Property<string>("InvNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("model");

                    b.Property<string>("NumForm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("numForm");

                    b.Property<string>("Serial")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("serial");

                    b.ToTable("otchetFormular");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.OtchetOborud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InvNum")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NameOborud")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nameOborud");

                    b.Property<string>("NumForm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("numForm");

                    b.Property<string>("ZavodNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("zavodNum");

                    b.HasKey("Id");

                    b.ToTable("otchetOborud");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.OtchetRemont", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BeginDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Idf111")
                        .HasColumnType("int")
                        .HasColumnName("idf111");

                    b.Property<string>("InvNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOborud")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nameOborud");

                    b.Property<string>("NumForm")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("numForm");

                    b.Property<string>("Podr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("podr");

                    b.Property<string>("Title")
                        .HasMaxLength(210)
                        .HasColumnType("nvarchar(210)");

                    b.Property<string>("TitleComplected")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user");

                    b.Property<string>("ZavodNum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Idf111");

                    b.ToTable("OtchetRemont");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.Podr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NamePodr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Podr");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Role1")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.Sklad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateSpisania")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateToSklad")
                        .HasColumnType("date");

                    b.Property<int>("Idformular")
                        .HasColumnType("int")
                        .HasColumnName("idformular");

                    b.Property<string>("InvNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumForm")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Text")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("sklad");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.Spisanie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateSpisan")
                        .HasColumnType("date");

                    b.Property<int>("Idformular")
                        .HasColumnType("int")
                        .HasColumnName("idformular");

                    b.Property<string>("InvNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumAktTechSost")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumForm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("numForm");

                    b.Property<string>("Text")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ZavodNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("zavodNum");

                    b.HasKey("Id");

                    b.HasIndex("Idformular");

                    b.ToTable("Spisanie");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.SprDgm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Gold")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gold");

                    b.Property<int?>("IdNameOborudKomplekt")
                        .HasColumnType("int")
                        .HasColumnName("idNameOborudKomplekt");

                    b.Property<string>("Mpg")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("mpg");

                    b.Property<string>("NameOborud")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Silver")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("silver");

                    b.HasKey("Id");

                    b.HasIndex("IdNameOborudKomplekt");

                    b.ToTable("SprDgm");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("FName");

                    b.Property<int>("IdPodr")
                        .HasColumnType("int")
                        .HasColumnName("idPodr");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("MName");

                    b.HasKey("Id");

                    b.HasIndex("IdPodr");

                    b.ToTable("users");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.UserSy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FName");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("login");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("pass");

                    //b.Property<int?>("UserId")
                    //    .HasColumnType("int");

                    b.HasKey("Id");

                    //b.HasIndex("UserId");

                    b.ToTable("UserSys");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.VSelectF111toNameOborud", b =>
                {
                    b.Property<DateTime>("GtDate")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.Property<int>("IdnameOborud")
                        .HasColumnType("int")
                        .HasColumnName("idnameOborud");

                    b.Property<string>("InvNum")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("KartNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameOborud")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nameOborud");

                    b.Property<string>("NumForm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("numForm");

                    b.Property<DateTime?>("OutDate")
                        .HasColumnType("date");

                    b.Property<bool?>("Remont")
                        .HasColumnType("bit");

                    b.ToView("vSelectF111ToNameOborud");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.Dgm", b =>
                {
                    b.HasOne("WpfEfCoreTest.Model.Formular", "IdformularNavigation")
                        .WithMany("Dgms")
                        .HasForeignKey("Idformular")
                        .HasConstraintName("FK_dgm_formular")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdformularNavigation");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.F111", b =>
                {
                    b.HasOne("WpfEfCoreTest.Model.User", "IdUserNavigation")
                        .WithMany("F111s")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK_f111_users")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WpfEfCoreTest.Model.NameOborud", "IdnameOborudNavigation")
                        .WithMany("F111s")
                        .HasForeignKey("IdnameOborud")
                        .HasConstraintName("FK_f111_nameOborud")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdnameOborudNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.Formular", b =>
                {
                    b.HasOne("WpfEfCoreTest.Model.Komplect", "IdKomplectNavigation")
                        .WithMany("Formulars")
                        .HasForeignKey("IdKomplect")
                        .HasConstraintName("FK_formular_Komplect")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WpfEfCoreTest.Model.F111", "Idf111Navigation")
                        .WithMany("Formulars")
                        .HasForeignKey("Idf111")
                        .HasConstraintName("FK_formular_f111")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Idf111Navigation");

                    b.Navigation("IdKomplectNavigation");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.Info", b =>
                {
                    b.HasOne("WpfEfCoreTest.Model.User", "IdUserNavigation")
                        .WithMany("Infos")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK_info_users")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.OtchetRemont", b =>
                {
                    b.HasOne("WpfEfCoreTest.Model.F111", "Idf111Navigation")
                        .WithMany("OtchetRemonts")
                        .HasForeignKey("Idf111")
                        .HasConstraintName("FK_OtchetRemont_f111")
                        .IsRequired();

                    b.Navigation("Idf111Navigation");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.Spisanie", b =>
                {
                    b.HasOne("WpfEfCoreTest.Model.Formular", "IdformularNavigation")
                        .WithMany("Spisanies")
                        .HasForeignKey("Idformular")
                        .HasConstraintName("FK_Spisanie_formular")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdformularNavigation");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.SprDgm", b =>
                {
                    b.HasOne("WpfEfCoreTest.Model.Komplect", "IdNameOborudKomplektNavigation")
                        .WithMany("SprDgms")
                        .HasForeignKey("IdNameOborudKomplekt")
                        .HasConstraintName("FK_SprDgm_Komplect");

                    b.Navigation("IdNameOborudKomplektNavigation");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.User", b =>
                {
                    b.HasOne("WpfEfCoreTest.Model.Podr", "IdPodrNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdPodr")
                        .HasConstraintName("FK_users_Podr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdPodrNavigation");
                });

            //modelBuilder.Entity("WpfEfCoreTest.Model.UserSy", b =>
            //    {
            //        b.HasOne("WpfEfCoreTest.Model.User", null)
            //            .WithMany("UserSies")
            //            .HasForeignKey("UserId");
            //    });

            modelBuilder.Entity("WpfEfCoreTest.Model.F111", b =>
                {
                    b.Navigation("Formulars");

                    b.Navigation("OtchetRemonts");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.Formular", b =>
                {
                    b.Navigation("Dgms");

                    b.Navigation("Spisanies");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.Komplect", b =>
                {
                    b.Navigation("Formulars");

                    b.Navigation("SprDgms");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.NameOborud", b =>
                {
                    b.Navigation("F111s");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.Podr", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("WpfEfCoreTest.Model.User", b =>
                {
                    b.Navigation("F111s");

                    b.Navigation("Infos");

                    b.Navigation("UserSies");
                });
#pragma warning restore 612, 618
        }
    }
}
